///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// This software is supplied under the terms of a license agreement or
// nondisclosure agreement and may not be copied or disclosed except in
// accordance with the terms of that agreement.
//
// Copyright (c) 2005 Jesper Svennevid, Daniel Collin.
// All Rights Reserved.
//
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#ifndef zenic_opengl_ShaderBuilder_h
#define zenic_opengl_ShaderBuilder_h

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class CSLXSIMaterial;
class CSLXSIShader;

namespace zenic
{
	class String;

	namespace opengl
	{
		class ExporterBackend;
		class Material;
		class ShaderNode;
	}
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

namespace zenic
{
	namespace opengl
	{

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class ShaderBuilder
{
public:

	static bool build(Material* material, ExporterBackend& backend, CSLXSIMaterial* xsiMaterial);

private:

	enum
	{
		SoftImageTxt2d = 0xbb42a7e2 // Softimage.txt2d-image-explicit.1
	};

	static ShaderNode* textureShader(Material* material, ExporterBackend& backend, CSLXSIShader* xsiShader);
};

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	}
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#endif


