///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// This software is supplied under the terms of a license agreement or
// nondisclosure agreement and may not be copied or disclosed except in
// accordance with the terms of that agreement.
//
// Copyright (c) 2005 Jesper Svennevid, Daniel Collin.
// All Rights Reserved.
//
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#ifndef zenic_TriangleStrip_h
#define zenic_TriangleStrip_h

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#if defined(_MSC_VER)
#pragma warning(disable: 4530)
#endif

#include <vector>

#if defined(_MSC_VER)
#pragma warning(default: 4530)
#endif

#include <Shared/Base/Types.h>
#include <Shared/Base/Memory/DataPtr.h>

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class CSLXSIMesh;

namespace zenic
{
	class DegenerateMesh;
}


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

namespace zenic
{

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class TriangleStrip
{
public:
	
	enum Technique
	{
		Actc,
		Tunnel
	};

	TriangleStrip(Technique technique);
	~TriangleStrip();

	struct StripInfo
	{
		u32* remapTable;
		std::vector<DataPtr<u32>*> stripList;	
	};

	StripInfo process(CSLXSIMesh* mesh); 
	StripInfo process(DegenerateMesh* mesh); 

private:

	StripInfo processActc(const int* indexList, const int indexListCount);

	Technique m_technique;
	u32* m_indices;
	u32 m_indicesCount;
};

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}

#endif