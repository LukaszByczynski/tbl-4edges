///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// This software is supplied under the terms of a license agreement or
// nondisclosure agreement and may not be copied or disclosed except in
// accordance with the terms of that agreement.
//
// Copyright (c) 2005 Jesper Svennevid, Daniel Collin.
// All Rights Reserved.
//
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include "Material.h"
#include <Shared/Base/Serialize/Serializer.h>
#include <Shared/Base/Serialize/SerializableVersion.h>

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

namespace zenic
{
	namespace opengl
	{

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

ZENIC_CREATE_SERIALIZABLE_FACTORY(Material, SERIALIZABLE_ID('O','G','L',' '), SERIALIZABLE_ID('M','A','T','R'))

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Material::Material()
{
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void Material::serialize(Serializer& s)
{
//	zenic::Material::serialize(s);
	SerializableVersion version(1, factory());

	s << version;

	s.descriptor(SERIALIZER_NAME("m_shaders")) << m_shaders;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void Material::execute()
{
	for (uint i = 0; i < m_shaders.count(); ++i)
		m_shaders[i]->execute();
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void Material::addInternal(Serializer& s)
{
	for (uint i = 0; i < m_shaders.count(); ++i)
	{
		s.add(m_shaders[i]);
		m_shaders[i]->addInternal(s);
	}
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	}
}