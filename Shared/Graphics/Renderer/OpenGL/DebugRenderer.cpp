///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// This software is supplied under the terms of a license agreement or
// nondisclosure agreement and may not be copied or disclosed except in
// accordance with the terms of that agreement.
//
// Copyright (c) 2005 Jesper Svennevid, Daniel Collin.
// All Rights Reserved.
//
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include "DebugRenderer.h"
#include <windows.h>
#include <gl/gl.h>
#include <Shared/Base/Math/Vector3.h>
#include <Shared/Base/Math/Color32.h>

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

namespace zenic
{
	namespace opengl
	{

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void DebugRenderer::text(const char* /*dispText*/, float /*x*/, float /*y*/, const Color32& /*color*/)
{
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void DebugRenderer::triangle(const Vector3& p0, const Vector3& p1, const Vector3& p2, const Color32& color)
{
	glBegin(GL_TRIANGLES);
	glColor3f(color.r * 1.0f / 255.0f, color.g * 1.0f / 255.0f, color.b * 1.0f / 255.0f);
	glVertex3f(p0.x, p0.y, p0.z); 
	glVertex3f(p1.x, p1.y, p1.z); 
	glVertex3f(p2.x, p2.y, p2.z); 
	glEnd();
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void DebugRenderer::line(const Vector3& p1, const Vector3& p2, const Color32& color)
{
	glBegin(GL_LINES);
	glColor3f(color.r * 1.0f / 255.0f, color.g * 1.0f / 255.0f, color.b * 1.0f / 255.0f);
	glVertex3f(p1.x, p1.y, p1.z); 
	glVertex3f(p2.x, p2.y, p2.z); 
	glEnd();
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void DebugRenderer::begin()
{
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void DebugRenderer::end()
{
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	}
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
