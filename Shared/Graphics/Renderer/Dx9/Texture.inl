inline Texture::Surface::Surface() : m_pitch(0)
{
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

inline void Texture::Surface::setPitch( u32 pitch )
{
	m_pitch = pitch;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

inline u32 Texture::Surface::pitch() const
{
	return m_pitch;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

inline void Texture::Surface::setData( DataPtr<u8> data )
{
	m_data = data;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

inline DataPtr<u8> Texture::Surface::data() const
{
	return m_data;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

inline Texture::Texture() : m_width(0), m_height(0), m_depth(0), m_format(0), m_properties(0)
{
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

inline void Texture::setWidth( u32 width )
{
	m_width = width;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

inline u32 Texture::width() const
{
	return m_width;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

inline void Texture::setHeight( u32 height )
{
	m_height = height;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

inline u32 Texture::height() const
{
	return m_height;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

inline void Texture::setDepth( u32 depth )
{
	m_depth = depth;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

inline u32 Texture::depth() const
{
	return m_depth;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

inline void Texture::setFormat( u32 format )
{
	m_format = format;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

inline u32 Texture::format() const
{
	return m_format;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

inline void Texture::setProperties( u32 properties )
{
	m_properties = properties;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

inline u32 Texture::properties() const
{
	return m_properties;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

inline u32 Texture::surfaces() const
{
	return m_surfaces.count();
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

inline Texture::Surface& Texture::surface( u32 index )
{
	ZENIC_ASSERT( index < m_surfaces.count() );
	return m_surfaces[index];
}
