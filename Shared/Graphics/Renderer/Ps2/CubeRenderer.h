///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// This software is supplied under the terms of a license agreement or
// nondisclosure agreement and may not be copied or disclosed except in
// accordance with the terms of that agreement.
//
// Copyright (c) 2006 Jesper Svennevid, Daniel Collin.
// All Rights Reserved.
//
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#ifndef zenic_ps2_CubeRenderer_h
#define zenic_ps2_CubeRenderer_h

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include <Shared/Base/Types.h>

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

namespace zenic
{
	class Matrix4;
	class Vector3;
	class Model;

	namespace ps2
	{
		class Dma;
		class Renderer;
	}
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

namespace zenic
{
	namespace ps2
	{

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class CubeRenderer
{
public:

	CubeRenderer(Renderer& renderer, Dma& dmaChain);

	void begin(const Vector3& directionalLightPosition);
	void render(const Matrix4& matrix);
	void end();

	void beginShadow();
	void renderShadow(const Matrix4& matrix);
	void endShadow();

private:

	void addQuad(const Vector3& p0, const Vector3& p1, const Vector3& p2, const Vector3& p3);

	Renderer& m_renderer;
	Dma& m_dmaChain;
	Model* m_shadowModel;
	s32 m_vu1Address;
	u32 m_destBuffer1;
	u32 m_destBuffer2;
	bool m_started;
	bool m_hasSetMaterial;
};

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	}
}

#endif
