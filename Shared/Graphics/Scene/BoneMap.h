///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// This software is supplied under the terms of a license agreement or
// nondisclosure agreement and may not be copied or disclosed except in
// accordance with the terms of that agreement.
//
// Copyright (c) 2003-2005 Jesper Svennevid, Daniel Collin.
// All Rights Reserved.
//
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#ifndef zenic_BoneMap_h
#define zenic_BoneMap_h

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include <Shared/Base/Serialize/Serializable.h>
#include <Shared/Base/Serialize/SerializableFactory.h>
#include <Shared/Base/Serialize/SerializableStructure.h>

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

namespace zenic
{
	class Serializer;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

namespace zenic
{

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class BoneMap : public Serializable
{
	ZENIC_SERIALIZABLE_FACTORY;
public:

	BoneMap();
	~BoneMap();

	void setCount( u32 count );
	u32 count() const;

	void setAffected(u32 affected);
	u32 affected() const;

	const u32* bones() const; 
	u32* bones();

	virtual void serialize(Serializer& s);

private:

	class Index
	{
		ZENIC_SERIALIZABLE_STRUCTURE;
	public:
		u32 m_index;
	};

	u32 m_affected;
	DataPtr<Index> m_bones;
};

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include "BoneMap.inl"

}

#endif
