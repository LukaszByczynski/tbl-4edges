///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// This software is supplied under the terms of a license agreement or
// nondisclosure agreement and may not be copied or disclosed except in
// accordance with the terms of that agreement.
//
// Copyright (c) 2005-2006 Jesper Svennevid, Daniel Collin.
// All Rights Reserved.
//
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include "NetStream.h"
#include <string.h>

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

namespace zenic
{

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

const char* NetStream::readString()
{
	const char* retAddress = reinterpret_cast<const char*>(m_data);

	while (*m_data != 0)
	{
		m_data += 1;
		m_offset += 1;
		ZENIC_ASSERT(m_offset < m_dataCount);
	}

	// skip 0

	m_data += 1;
	m_offset += 1;
	
	return retAddress;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void NetStream::writeString(const char* string)
{
	size_t length = strlen(string);

	memcpy(m_data, string, length);
	m_data += length + 1;
	m_data[-1] = 0;

	m_offset += (uint)length + 1;
	ZENIC_ASSERT(m_offset < m_dataCount);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}
