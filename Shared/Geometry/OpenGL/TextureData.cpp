///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// This software is supplied under the terms of a license agreement or
// nondisclosure agreement and may not be copied or disclosed except in
// accordance with the terms of that agreement.
//
// Copyright (c) 2005 Jesper Svennevid, Daniel Collin.
// All Rights Reserved.
//
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include "TextureData.h"
#include <Shared/Base/Serialize/Serializer.h>
#include <Shared/Base/Serialize/SerializableVersion.h>

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

namespace zenic
{
	namespace opengl
	{

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

ZENIC_CREATE_SERIALIZABLE_FACTORY(TextureData,SERIALIZABLE_ID('O','G','L',' '),SERIALIZABLE_ID('T','D','A','T'));

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

TextureData::~TextureData()
{
	m_imageData.free();
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void TextureData::serialize(Serializer& s)
{
	zenic::SerializableVersion version(1, factory());

	s << version;

	s.descriptor(SERIALIZER_NAME("m_flags")) << m_flags;
	s.descriptor(SERIALIZER_NAME("m_width")) << m_width;
	s.descriptor(SERIALIZER_NAME("m_height")) << m_height;
	s.descriptor(SERIALIZER_NAME("m_imageData")) << m_imageData;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	}
}
