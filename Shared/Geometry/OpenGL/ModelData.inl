///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

inline void ModelData::setType(ModelData::Type type)
{
	m_type = (u16)type;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

inline ModelData::Type ModelData::type() const
{
	return (ModelData::Type)m_type;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

inline void ModelData::setMaterial(Material* material)
{
	m_material = material;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

inline Material* ModelData::material()
{
	return m_material;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

inline DataPtr<ModelData::PolygonList>& ModelData::polygons()
{
	return m_polygons;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

inline void ModelData::setPolygons(DataPtr<ModelData::PolygonList>& polygons)
{
	m_polygons = polygons;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

inline void ModelData::PolygonList::setVertexStream(const DataPtr<f32>& data)
{
	m_vertexStream = data;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*
inline void ModelData::PolygonList::setIndexStream(const DataPtr<u32>& data)
{
	m_indexStream = data;
}
*/
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

inline void ModelData::PolygonList::setPolygonType(u32 polygonType)
{
	m_polygonType = polygonType;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

inline void ModelData::PolygonList::setVertexFormat(u32 vertexFormat)
{
	m_vertexFormat = vertexFormat;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

inline DataPtr<f32>& ModelData::PolygonList::vertexStream()
{
	return m_vertexStream;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*
inline DataPtr<u32>& ModelData::PolygonList::indexStream()
{
	return m_indexStream;
}
*/
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

inline u32 ModelData::PolygonList::polygonType() const
{
	return m_polygonType;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

inline u32 ModelData::PolygonList::vertexFormat() const
{
	return m_vertexFormat;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

inline void ModelData::Skin::setAffector(Node* node)
{
	m_affector = node;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

inline DataPtr<f32>& ModelData::Skin::weightList()
{
	return m_weightList;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

inline DataPtr<u32>& ModelData::Skin::indexList()
{
	return m_indexList;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

inline Node* ModelData::Skin::affector() const
{
	return m_affector;
}
