///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

inline TextureData::TextureData() : m_flags(0), m_width(0), m_height(0)
{
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

inline void TextureData::setFlags(u32 flags)
{
	m_flags = flags;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

inline u32 TextureData::flags() const
{
	return m_flags;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

inline void TextureData::setWidth(u16 width)
{
	m_width = width;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

inline u16 TextureData::width() const
{
	return m_width;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

inline void TextureData::setHeight(u16 height)
{
	m_height = height;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

inline u16 TextureData::height() const
{
	return m_height;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

inline void TextureData::setImageData(const DataPtr<u8>& data)
{
	m_imageData = data;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

inline const DataPtr<u8>& TextureData::imageData() const
{
	return m_imageData;
}

