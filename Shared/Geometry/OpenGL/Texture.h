///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// This software is supplied under the terms of a license agreement or
// nondisclosure agreement and may not be copied or disclosed except in
// accordance with the terms of that agreement.
//
// Copyright (c) 2005 Jesper Svennevid, Daniel Collin.
// All Rights Reserved.
//
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#ifndef zenic_opengl_Texture_h
#define zenic_opengl_Texture_h

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include <Shared/Base/Serialize/Serializable.h>
#include <Shared/Base/Serialize/SerializableFactory.h>

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

namespace zenic
{
	namespace opengl
	{
		class TextureData;
	}
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

namespace zenic
{
	namespace opengl
	{

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class Texture : public Serializable
{
	ZENIC_SERIALIZABLE_FACTORY;

public:

	Texture();
	virtual ~Texture();

	virtual void serialize(Serializer& s);

	void setData(TextureData* data);
	TextureData* data() const;

private:

	TextureData* m_data;
};

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

inline void Texture::setData(TextureData* data)
{
	m_data = data;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

inline TextureData* Texture::data() const
{
	return m_data;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	}
}

#endif
