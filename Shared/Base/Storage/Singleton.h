///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// This software is supplied under the terms of a license agreement or
// nondisclosure agreement and may not be copied or disclosed except in
// accordance with the terms of that agreement.
//
// Copyright (c) 2003-2005 Jesper Svennevid, Daniel Collin.
// All Rights Reserved.
//
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#ifndef zenic_Singleton_h
#define zenic_Singleton_h

#include "../Debug/Assert.h"

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

namespace zenic
{

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

template<class T> class Singleton
{
public:

	inline Singleton() {};
	virtual ~Singleton() { ZENIC_ASSERT(m_instance); }

	inline static T* instance() { ZENIC_ASSERT(m_instance); return m_instance; }
	inline static void setInstance(T* instance) { m_instance = instance; }

private:

	static T* m_instance;
};

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

template <class T> T* Singleton<T>::m_instance = 0;

}

#endif
