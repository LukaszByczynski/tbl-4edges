///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// This software is supplied under the terms of a license agreement or
// nondisclosure agreement and may not be copied or disclosed except in
// accordance with the terms of that agreement.
//
// Copyright (c) 2005 Jesper Svennevid, Daniel Collin.
// All Rights Reserved.
//
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include "Timer.h"
#include <Shared/Base/Debug/Assert.h>

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

namespace zenic
{

u64 Timer::m_base = 0;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void Timer::reset()
{
	m_base = rawTick();
	m_deltaTick = 0;
	m_tick = 0;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void Timer::update()
{
	u64 newTick = rawTick();

	m_deltaTick = newTick - m_tick;
	m_tick = newTick;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

u64 Timer::rawTick() const
{
	const float PS2_DIVIDER = 1000.f;
	u32 currTime;
	u64 lastTime = 0;
	u64 totalTime = 0;

	asm __volatile__ ("mfc0 %0, $9" : "=r" (currTime));
	u64 deltaTime = (currTime >= lastTime) ? (currTime - lastTime) : 0xffffffff - (lastTime - currTime);
	lastTime = currTime;

	deltaTime = (u64)((float)deltaTime / PS2_DIVIDER);
	totalTime += deltaTime;

	return (totalTime / 4) - m_base;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}

