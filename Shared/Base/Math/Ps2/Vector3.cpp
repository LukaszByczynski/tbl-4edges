///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// This software is supplied under the terms of a license agreement or
// nondisclosure agreement and may not be copied or disclosed except in
// accordance with the terms of that agreement.
//
// Copyright (c) 2003-2004 Jesper Svennevid, Daniel Collin.
// All Rights Reserved.
//
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Includes
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include "Vector3.h"
#include "../../Serialize/Serializer.h"
#include "../../Io/Log.h"

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Class
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

namespace zenic
{

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void Vector3::serialize(Serializer& s, const char* name)
{
	s.beginGroup(SERIALIZER_NAME(name), SERIALIZER_NAME("zenic::Vector3"));

	s.descriptor(SERIALIZER_NAME("x")) << x;
	s.descriptor(SERIALIZER_NAME("y")) << y;
	s.descriptor(SERIALIZER_NAME("z")) << z;

	s.endGroup();
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Log& operator<<(Log& stream, const Vector3& v)
{
	stream << v.x << " " << v.y << " " << v.z;
	return stream;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}
