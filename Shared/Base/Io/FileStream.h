///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// This software is supplied under the terms of a license agreement or
// nondisclosure agreement and may not be copied or disclosed except in
// accordance with the terms of that agreement.
//
// Copyright (c) 2005-2006 Jesper Svennevid, Daniel Collin.
// All Rights Reserved.
//
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#ifndef zenic_FileStream_h
#define zenic_FileStream_h

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include "Stream.h"
#include "File.h"

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

namespace zenic
{

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class FileStream : public Stream
{
public:

	enum Mode
	{
		Read,
		Write
	};

	FileStream();
	virtual ~FileStream();

	bool open(const char* filename, Mode mode);
	void close();

	virtual int read(void* buffer, int size);
	virtual int write(const void* buffer, int size);
	virtual int seek(SeekMode mode, int offset);
	virtual bool flush();
	virtual int tell() const;

	bool isGood() const;

private:

	enum
	{
		BufferSize = 4096
	};

	File m_file;
	Mode m_mode;

	u8 m_buffer[BufferSize];
	int m_offset;
	int m_size;
};

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include "FileStream.inl"

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}

#endif
