///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// This software is supplied under the terms of a license agreement or
// nondisclosure agreement and may not be copied or disclosed except in
// accordance with the terms of that agreement.
//
// Copyright (c) 2006 Jesper Svennevid, Daniel Collin.
// All Rights Reserved.
//
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include "FileSystem.h"
#include <Shared/Base/Io/Log.h>
#include <stdio.h>
#include <string.h>

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

namespace zenic
{

FileSystem* FileSystem::m_instance = 0;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

FileSystem::FileSystem() : 
	m_driveName("")
{
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

bool FileSystem::open(FileStream& stream, const char* filename, FileStream::Mode mode)
{
	char temp[256];

	// TEMP, implement proper operator into String class instead

	sprintf(temp, "%s%s", m_driveName.contents(), filename);
	ZENIC_INFO("Trying to open file " << temp);

	return stream.open(temp, mode);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

FileSystem& FileSystem::instance()
{
	if (!m_instance)
		m_instance = zenic_new FileSystem;

	ZENIC_ASSERT(m_instance);
	return *m_instance;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}
