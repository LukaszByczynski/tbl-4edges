///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// This software is supplied under the terms of a license agreement or
// nondisclosure agreement and may not be copied or disclosed except in
// accordance with the terms of that agreement.
//
// Copyright (c) 2006 Jesper Svennevid, Daniel Collin.
// All Rights Reserved.
//
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#ifndef zenic_ps2_LoadingPart_h
#define zenic_ps2_LoadingPart_h

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include "Part.h"
#include <Shared/Base/Types.h>

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

namespace zenic
{
	namespace ps2
	{
		class Texture;
		class Dma;
		class Renderer;
	}
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

namespace zenic
{
	namespace ps2
	{
	
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class LoadingPart : public Part
{

public:

	LoadingPart(Renderer& renderer, Dma& dmaChain);

	bool create();
	void reset() {}
	void update(float progress = 0.0f, float time = 0.0f, SyncPoints::Part* syncPoints = 0);

private:

	void showImage();

	Renderer& m_renderer;
	Dma& m_dmaChain;
	Texture* m_loading;
};

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

inline LoadingPart::LoadingPart(Renderer& renderer, Dma& dmaChain) :
	m_renderer(renderer),
	m_dmaChain(dmaChain),
	m_loading(0)
{
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	}
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#endif



